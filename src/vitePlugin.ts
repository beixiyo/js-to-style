import type { Plugin } from 'vite'
import { writeStyle } from './writeStyle'
import type { AutoParseStylesPluginOptions } from './types'

/**
 * Ëá™Âä®Ëß£ÊûêÊ†∑ÂºèÂèòÈáèÂπ∂ÁîüÊàê CSS | SCSS | LESS Êñá‰ª∂ÁöÑ Vite Êèí‰ª∂
 */
export function autoParseStyles(options: AutoParseStylesPluginOptions): Plugin {
  const {
    watch = true,
  } = options

  let isFirstRun = true

  const runWriteStyle = () => {
    try {
      writeStyle(options)
      console.log('‚úÖ Auto parse styles completed')
    }
    catch (error) {
      console.error('‚ùå Auto parse styles failed:', error)
    }
  }

  return {
    name: 'auto-parse-styles',
    configResolved() {
      // Âú®ÈÖçÁΩÆËß£ÊûêÂÆåÊàêÂêéËøêË°å‰∏ÄÊ¨°
      if (isFirstRun) {
        runWriteStyle()
        isFirstRun = false
      }
    },
    buildStart() {
      // Âú®ÊûÑÂª∫ÂºÄÂßãÊó∂ËøêË°å
      runWriteStyle()
    },
    configureServer(server) {
      if (watch) {
        try {
          server.watcher.add(options.jsPath)
          console.log(`üëÄ Watching file: ${options.jsPath}`)

          // ÁõëÂê¨Êñá‰ª∂ÂèòÂåñ‰∫ã‰ª∂
          server.watcher.on('change', (filePath) => {
            if (filePath === options.jsPath) {
              console.log(`üìù File changed: ${options.jsPath}`)
              runWriteStyle()
            }
          })
        }
        catch (error) {
          console.warn(`‚ö†Ô∏è Failed to watch file ${options.jsPath}:`, error)
        }
      }
    }
  }
}
